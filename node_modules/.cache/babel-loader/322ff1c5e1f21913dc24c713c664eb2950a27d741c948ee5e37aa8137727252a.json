{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\New folder\\\\Pandora\\\\src\\\\components\\\\SpeechToText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./SpeechToText.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechRecognitionComponent = () => {\n  _s();\n  const [texts, setTexts] = useState([]);\n  useEffect(() => {\n    let recognition = null;\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      recognition = new SpeechRecognition();\n      recognition.interimResults = true;\n      recognition.addEventListener(\"result\", e => {\n        const transcript = Array.from(e.results).map(result => result[0]).map(result => result.transcript).join(\"\");\n        setTexts(prevTexts => [...prevTexts, transcript]);\n        if (transcript.includes(\"how are you\")) {\n          setTexts(prevTexts => [...prevTexts, \"I am fine\"]);\n        }\n        if (transcript.includes(\"what's your name\") || transcript.includes(\"what is your name\")) {\n          setTexts(prevTexts => [...prevTexts, \"My Name is Pandora\"]);\n        }\n        if (transcript.includes(\"open YouTube\")) {\n          setTexts(prevTexts => [...prevTexts, \"opening youtube channel\"]);\n          window.open(\"https://www.youtube.com\");\n        }\n      });\n      recognition.addEventListener(\"end\", () => {\n        recognition.start();\n      });\n      recognition.start();\n    } else {\n      console.log(\"Speech recognition not supported in this browser.\");\n    }\n    return () => {\n      if (recognition) {\n        recognition.removeEventListener(\"result\", handleResult);\n        recognition.removeEventListener(\"end\", handleEnd);\n        recognition.stop();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Available In Chrome Only\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"texts\",\n        children: texts.map((text, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: text.includes(\"I am\") ? \"replay\" : \"\",\n          children: text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechRecognitionComponent, \"PsTkS3oI37JabbNh0gpvNVK96jk=\");\n_c = SpeechRecognitionComponent;\nexport default SpeechRecognitionComponent;\nvar _c;\n$RefreshReg$(_c, \"SpeechRecognitionComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SpeechRecognitionComponent","_s","texts","setTexts","recognition","SpeechRecognition","window","webkitSpeechRecognition","interimResults","addEventListener","e","transcript","Array","from","results","map","result","join","prevTexts","includes","open","start","console","log","removeEventListener","handleResult","handleEnd","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","text","index","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/New folder/Pandora/src/components/SpeechToText.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./SpeechToText.css\";\r\n\r\nconst SpeechRecognitionComponent = () => {\r\n  const [texts, setTexts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let recognition = null;\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (SpeechRecognition) {\r\n      recognition = new SpeechRecognition();\r\n      recognition.interimResults = true;\r\n\r\n      recognition.addEventListener(\"result\", (e) => {\r\n        const transcript = Array.from(e.results)\r\n          .map((result) => result[0])\r\n          .map((result) => result.transcript)\r\n          .join(\"\");\r\n\r\n        setTexts(prevTexts => [...prevTexts, transcript]);\r\n\r\n        if (transcript.includes(\"how are you\")) {\r\n          setTexts(prevTexts => [...prevTexts, \"I am fine\"]);\r\n        }\r\n        if (\r\n          transcript.includes(\"what's your name\") ||\r\n          transcript.includes(\"what is your name\")\r\n        ) {\r\n          setTexts(prevTexts => [...prevTexts, \"My Name is Pandora\"]);\r\n        }\r\n        if (transcript.includes(\"open YouTube\")) {\r\n          setTexts(prevTexts => [...prevTexts, \"opening youtube channel\"]);\r\n          window.open(\"https://www.youtube.com\");\r\n        }\r\n      });\r\n\r\n      recognition.addEventListener(\"end\", () => {\r\n        recognition.start();\r\n      });\r\n\r\n      recognition.start();\r\n    } else {\r\n      console.log(\"Speech recognition not supported in this browser.\");\r\n    }\r\n\r\n    return () => {\r\n      if (recognition) {\r\n        recognition.removeEventListener(\"result\", handleResult);\r\n        recognition.removeEventListener(\"end\", handleEnd);\r\n        recognition.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section>\r\n      <h1>Speech Recognition</h1>\r\n      <p>Available In Chrome Only</p>\r\n      <div className=\"container\">\r\n        <div className=\"texts\">\r\n          {texts.map((text, index) => (\r\n            <p key={index} className={text.includes(\"I am\") ? \"replay\" : \"\"}>{text}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SpeechRecognitionComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}